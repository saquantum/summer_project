<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="uk.ac.bristol.dao.AssetHolderMapper">
    <select id="selectAddressByAssetHolderId" resultMap="ResultMaps.AddressMap">
        select * from address where address_id = #{assetHolderId};
    </select>

    <insert id="insertAddress">
        insert into address (address_id,
                             address_street,
                             address_city,
                             address_postcode,
                             address_country)
        values (#{assetHolderId}, #{street}, #{city}, #{postcode}, #{country});
    </insert>

    <update id="updateAddressByAssetHolderId">
        update address
        <set>
            <if test="street != null and street != ''">address_street = #{street},</if>
            <if test="city != null and city != ''">address_city = #{city},</if>
            <if test="postcode != null and postcode != ''">address_postcode = #{postcode},</if>
            <if test="country != null and country != ''">address_country = #{country},</if>
        </set>
        where address_id = #{assetHolderId};
    </update>

    <delete id="deleteAddressByAssetHolderIds">
        delete from address where address_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
    </delete>

    <select id="selectContactPreferencesByAssetHolderId" resultMap="ResultMaps.ContactPreferencesMap">
        select * from contact_preferences where contact_preferences_id = #{assetHolderId};
    </select>

    <insert id="insertContactPreferences">
        insert into contact_preferences (contact_preferences_id,
                                         contact_preferences_email,
                                         contact_preferences_phone,
                                         contact_preferences_post,
                                         contact_preferences_whatsapp,
                                         contact_preferences_discord,
                                         contact_preferences_telegram)
        values (#{assetHolderId}, #{email}, #{phone}, #{post}, #{whatsapp}, #{discord}, #{telegram});
    </insert>

    <update id="updateContactPreferencesByAssetHolderId">
        update contact_preferences
        <set>
            <if test="email != null">contact_preferences_email = #{email},</if>
            <if test="phone != null">contact_preferences_phone = #{phone},</if>
            <if test="post != null">contact_preferences_post = #{post},</if>
            <if test="whatsapp != null">contact_preferences_whatsapp = #{whatsapp},</if>
            <if test="discord != null">contact_preferences_discord = #{discord},</if>
            <if test="telegram != null">contact_preferences_telegram = #{telegram},</if>
        </set>
        where contact_preferences_id = #{assetHolderId};
    </update>

    <delete id="deleteContactPreferencesByAssetHolderIds">
        delete from contact_preferences where contact_preferences_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
    </delete>

    <select id="selectAllAssetHolders" resultMap="ResultMaps.AssetHolderMap">
        select * from asset_holders
        <include refid="ResultMaps.orderAndPage"/>
    </select>

    <select id="selectAssetHolderByIDs" resultMap="ResultMaps.AssetHolderMap">
        select *
        from asset_holders
        where asset_holder_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
        <include refid="ResultMaps.orderAndPage"/>
    </select>

    <select id="selectByAssetHolder" resultMap="ResultMaps.AssetHolderMap">
        select * from asset_holders
        <where>
            <if test="id != null">and asset_holder_id = #{id}</if>
            <if test="name != null and name != ''">and asset_holder_name like #{name}</if>
            <if test="email != null and email != ''">and asset_holder_email like #{email}</if>
            <if test="phone != null and phone != ''">and asset_holder_phone like #{phone}</if>
        </where>
    </select>

    <select id="testEmailAddressExistence" resultType="java.lang.Boolean">
        select count(*) > 0
        from asset_holders
        where asset_holder_email = #{email};
    </select>

    <select id="selectAssetHolderIdByEmail" resultType="String">
        select asset_holder_id
        from asset_holders
        where asset_holder_email = #{email};
    </select>

    <insert id="insertAssetHolder" >
        insert into asset_holders (asset_holder_id,
                                   asset_holder_name,
                                   asset_holder_email,
                                   asset_holder_phone,
                                   asset_holder_address_id,
                                   asset_holder_contact_preferences_id,
                                   asset_holder_last_modified)
        values (#{id}, #{name}, #{email}, #{phone}, #{addressId}, #{contactPreferencesId}, #{lastModified});
    </insert>

    <insert id="insertAssetHolderAutoId" parameterType="uk.ac.bristol.pojo.AssetHolder" keyProperty="id" keyColumn="asset_holder_id">
        insert into asset_holders (asset_holder_name,
                                   asset_holder_email,
                                   asset_holder_phone,
                                   asset_holder_address_id,
                                   asset_holder_contact_preferences_id)
        values (#{name}, #{email}, #{phone}, #{addressId}, #{contactPreferencesId})
        returning asset_holder_id
    </insert>

    <select id="generateAssetHolderId" parameterType="uk.ac.bristol.pojo.AssetHolder" resultType="string">
        insert into asset_holders (asset_holder_name,
                                   asset_holder_email,
                                   asset_holder_phone,
                                   asset_holder_address_id,
                                   asset_holder_contact_preferences_id)
        values ('', '', '', #{addressId}, #{contactPreferencesId})
        returning asset_holder_id
    </select>

    <update id="updateAssetHolder">
        update asset_holders
        <set>
            <if test="name != null and name != ''">asset_holder_name = #{name},</if>
            <if test="email != null and email != ''">asset_holder_email = #{email},</if>
            <if test="phone != null and phone != ''">asset_holder_phone = #{phone},</if>
            <if test="addressId != null and addressId != ''">asset_holder_address_id = #{addressId},</if>
            <if test="contactPreferencesId != null and contactPreferencesId != ''">asset_holder_contact_preferences_id = #{contactPreferencesId},</if>
            <if test="lastModified != null">asset_holder_last_modified = #{lastModified},</if>
        </set>
        where asset_holder_id = #{id};
    </update>

    <delete id="deleteAssetHolderByAssetHolderIDs">
        delete from asset_holders where asset_holder_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
    </delete>
</mapper>